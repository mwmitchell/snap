= Snap - REST made easy

== Overview
Snap is a small web framework for creating RESTful web applications. The heart of Snap is the controller layer; a contextual, block based DSL featuring RESTful action hooks, an event filter system and url param mapping.

The start of any Snap application is a root Context. Contexts are sub-slices of a url and help keep routes DRY. The Context is responsible for defining the base URL path for it's actions, filters and child Contexts. One Context is equal to a set of URL path fragments. For example, a context could be /admin/transactions. Within that Context, there can be multiple actions, filters and sub-contexts.

The request and before/after handlers are able to negotiate different formats of content using the :format method within an action block.

Snap is very similar to Sinatra in that each action is a simple block. Snap is a little more structured and flexible than Sinatra. This can be a disadvantage or an advantage depending on the type of app you're trying to build.

* Thanks to Merb and Sinatra for the little bits of code here and there

== Example
Here is a simple example:

module SimpleApp; end

class SimpleApp::Root
  
  include Snap::App
  
  start do
    
    after do
      nav = <<-EOF
        <ul>
          <li><a href="/">home</a></li>
          <li><a href="/about">about</a></li>
          <li><a href="/about/ruby">about ruby</a></li>
        </ul>
      EOF
      response.body = "<hr/>#{nav}#{response.body}<hr/>"
    end
    
    get {'The root path using GET'}
    context 'about' do
      get {"Snap is an experimental framework?!"}
      get 'ruby' do
        'Ruby -> http://ruby.com'
      end
    end
  end
  
end