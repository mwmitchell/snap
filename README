= Snap - REST made easy

== Overview
Snap is a small web framework for creating RESTful web applications. The heart of Snap is the controller layer; a contextual, block based DSL featuring RESTful action hooks, an event callback system and url param mapping.

The start of any Snap application is a root Zone. Zones are sub-slices of a url and help keep routes DRY. The Zone is responsible for defining the base URL path for it's actions, callbacks and child Zones. One Zone is equal to a (set of?) URL path fragments. For example, a Zone could be /admin/transactions. Within that Zone, there can be multiple actions, callbacks and sub-zones. Once you define a Zone, every child-Zone or callback within it is bound to the path it's defined (DRY's up your "routes").

The request and before/after callbacks are able to negotiate different formats of content using the :format method within an action block.

== Example
Here is a simple example:

 
module SimpleApp; end

class SimpleApp::Root
  
  include Snap::Zone::Event
  
  map do
    
    after do
      # wrap the pages up in a template
      wrap('main.layout', {}, {:bindings=>[@zone.action]})
    end
    
    get :index do
      @page_title = 'Hi.'
      render
    end
    
    map :about=>'about' do
      get :index do
        @page_title='About!'
        render
      end
      get :me=>'me' do
        @page_title='About ME'
        render
      end
    end
    
  end
  
end